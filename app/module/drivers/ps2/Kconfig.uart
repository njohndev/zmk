# Copyright (c) 2017 Linaro Ltd.
# SPDX-License-Identifier: Apache-2.0

DT_COMPAT_PS2_UART := uart-ps2

config PS2_UART
	bool "GPIO bit banging PS/2 support through UART"
	default $(dt_compat_enabled,$(DT_COMPAT_PS2_UART))
	select SERIAL
	select UART_ASYNC_API
	select UART_USE_RUNTIME_CONFIGURE
	help
	  Enable software driven (bit banging) PS/2 support using UART on GPIO pins

if PS2_UART

config PS2_UART_WRITE_MODE_BLOCKING
	bool "Don't use interrupts for writing data and instead block using timers."
	default n

config PS2_UART_ENABLE_PS2_RESEND_CALLBACK
	bool "Notify the PS2 device driver (mouse driver) when the received data is invalid and a resend is requested from the peripheral. This can help the higher level PS2 device driver handle transmission errors with less side-effects, but it requires a forked zephyr. With the ps2-uart driver this option is not really necessary, but is very useful for the ps2-gpio driver."
	default n
	select ZMK_INPUT_MOUSE_PS2_ENABLE_PS2_RESEND_CALLBACK

# PM_DEVICE is needed, because we use GPIO bitbanging for writing. And to
# release the data PIN that is used by the UART device, we use pinctrl to
# switch to the sleep state. But the sleep state is only included if PM_DEVICE
# is enabled.
config PM_DEVICE
	default y

# PS/2 events must be processed within 30-50us. Therefore we shift the
# BT_CTLR_LLL_PRIO from 0 to 1 and BT_CTLR_ULL_* priorities from 1 to 2.
# We then set the gpio priority to 0.
#
# The following also has to be added to the device tree to set GPIOTE to the
# highest priority:
# &gpiote {
# 	interrupts = < 0x6 0 >;
# };
#
# On top of that all other interrupts have to be set to priority 3 to prevent
# them from delaying the BT interrupts.
#
# Overrides can be generated using the following script in infused-kim's zmk
# fork:
# app/scripts/gen_interrupt_priority_overrides.py
#
# Make sure to do it on a zephyr.dts where the interrupts have not been
# adjusted yet (i.e. a config that doesn't have the the following options
# enabled).
#
# If you are building using a toolchain you can find the zephyr.dts in the
# build directory, which by default is: `app/build/zephyr/zephyr.dts`
#
# If you are building using the github actions, copy the output of the build
# step `xxxx_right - nice_nano_v2 Devicetree file` into a file and run the
# script on it.
#
# This will increase the probability that the PS/2 interrupts are triggered in
# time.

config BT_CTLR_ADVANCED_FEATURES
	default y

config BT_CTLR_LLL_PRIO
	default 1

config BT_CTLR_ULL_HIGH_PRIO
	default 2

config BT_CTLR_ULL_LOW_PRIO
	default 2

endif # PS2_UART
